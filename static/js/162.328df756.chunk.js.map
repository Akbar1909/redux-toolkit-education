{"version":3,"file":"static/js/162.328df756.chunk.js","mappings":"sOAMA,EAJiB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KAClB,OAAO,gBAAKC,UAAU,QAAf,SAAwBD,KCG3BE,EAAoB,CACxBF,KAAM,GACNG,aAAa,GAoEf,EAjEc,WACZ,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMF,SAE3C,GAAoCG,EAAAA,EAAAA,UAASP,GAA7C,eAAOQ,EAAP,KAAmBC,EAAnB,KAEMC,EAAsB,SAACC,GACb,UAAVA,EAAEC,KACJC,KAIEA,EAAe,SAACF,GACpBT,GAASY,EAAAA,EAAAA,GAAWN,IACpBC,EAAcT,IAQhB,OALAe,EAAAA,EAAAA,YAAU,WAER,OADAC,SAASC,iBAAiB,WAAYP,GAC/B,kBAAMM,SAASE,oBAAoB,WAAYR,MACrD,CAACF,KAGF,iBAAKT,UAAU,8BAAf,UACmB,IAAfK,EAAMe,QAAY,SAAC,EAAD,CAAUrB,KAAM,yCAAkCM,EAAMgB,KAAI,SAACC,EAAMC,GAAP,OAC9E,iBAAavB,UAAU,6BAAvB,UACG,KACD,yBACG,KACD,4BAAOuB,EAAI,EAAX,OAFF,KAEwB,0BAAOD,EAAKvB,OAAa,KAC/C,0BAAOuB,EAAKpB,YAAc,eAAO,iBAAa,QAEhD,mBAAQF,UAAU,QAAQwB,QAAS,kBAAMrB,GAASsB,EAAAA,EAAAA,GAAW,CAAEC,MAAOH,MAAtE,sBAPQA,OAaZ,4BACE,kBACEI,KAAK,OACLC,KAAK,OACLC,MAAOpB,EAAWV,KAClB+B,SAAU,SAAClB,GAAD,OACRF,GAAc,SAACqB,GAAD,eAAC,UAAeA,GAAhB,IAAsBhC,KAAMa,EAAEoB,OAAOH,eAGvD,kBACEF,KAAK,WACLC,KAAK,cACLK,QAASxB,EAAWP,YACpB4B,SAAU,SAAClB,GAAD,OACRF,GAAc,SAACqB,GAAD,eAAC,UACVA,GADS,IAEZ7B,YAAaU,EAAEoB,OAAOC,oBAM9B,mBAAQT,QAASV,EAAjB","sources":["Components/Molecules/EmptyBox.jsx","Pages/Todos.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst EmptyBox = ({ text }) => {\r\n  return <div className=\"empty\">{text}</div>;\r\n};\r\n\r\nexport default EmptyBox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { createTodo, deleteTodo } from \"../Features/Todos/Todos.actions\";\r\n\r\nimport EmptyBox from '../Components/Molecules/EmptyBox';\r\n\r\nconst defaultFormValues = {\r\n  text: \"\",\r\n  isCompleted: false,\r\n};\r\n\r\nconst Todos = () => {\r\n  const dispatch = useDispatch();\r\n  const todos = useSelector((state) => state.todos);\r\n\r\n  const [formValues, setFormValues] = useState(defaultFormValues);\r\n\r\n  const onCreateTodoByEnter = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      onCreateTodo();\r\n    }\r\n  };\r\n\r\n  const onCreateTodo = (e) => {\r\n    dispatch(createTodo(formValues));\r\n    setFormValues(defaultFormValues);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keypress\", onCreateTodoByEnter);\r\n    return () => document.removeEventListener(\"keypress\", onCreateTodoByEnter);\r\n  }, [formValues]);\r\n\r\n  return (\r\n    <div className=\"container flex-align-center\">\r\n      { todos.length===0? <EmptyBox text={\"Ish yo'q bekorchilik... 😁\"} />: todos.map((todo, i) => (\r\n        <div key={i} className=\"todo box flex-align-center\">\r\n          {\" \"}\r\n          <p>\r\n            {\" \"}\r\n            <span>{i + 1}.</span> <span>{todo.text}</span>{\" \"}\r\n            <span>{todo.isCompleted ? \"😎\" : \"😣\"}</span>{\" \"}\r\n          </p>\r\n          <button className=\"small\" onClick={() => dispatch(deleteTodo({ index: i }))}>\r\n            Delete\r\n          </button>\r\n        </div>\r\n      ))}\r\n\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"text\"\r\n          value={formValues.text}\r\n          onChange={(e) =>\r\n            setFormValues((prev) => ({ ...prev, text: e.target.value }))\r\n          }\r\n        />\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"isCompleted\"\r\n          checked={formValues.isCompleted}\r\n          onChange={(e) =>\r\n            setFormValues((prev) => ({\r\n              ...prev,\r\n              isCompleted: e.target.checked,\r\n            }))\r\n          }\r\n        />\r\n      </div>\r\n\r\n      <button onClick={onCreateTodo}>Create Todo</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n"],"names":["text","className","defaultFormValues","isCompleted","dispatch","useDispatch","todos","useSelector","state","useState","formValues","setFormValues","onCreateTodoByEnter","e","key","onCreateTodo","createTodo","useEffect","document","addEventListener","removeEventListener","length","map","todo","i","onClick","deleteTodo","index","type","name","value","onChange","prev","target","checked"],"sourceRoot":""}